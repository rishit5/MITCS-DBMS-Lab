21.Select C.title 
from section S natural join course C 
where S.semester = 'Fall' and S.year = 2009
UNION
Select c.title 
from section S natural join course C
where S.semester = 'Spring' and S.year = 2010;
22.Select C.title 
from section S natural join course C 
where S.semester = 'Fall' and S.year = 2009
INTERSECT
Select c.title 
from section S natural join course C
where S.semester = 'Spring' and S.year = 2010;
23.Select C.title 
from section S natural join course C 
where S.semester = 'Fall' and S.year = 2009
MINUS
Select c.title 
from section S natural join course C
where S.semester = 'Spring' and S.year = 2010;
24.Select avg(salary)
from instructor
where dept_name = 'Comp. Sci.'
group by dept_name;
25.select count(ID) 
from teaches
where semester = 'Spring' and year = 2010;
26.select course_id, count(ID)
from takes
group by course_id;
27.with dept_count(dept_name, coount) as
(select dept_name, count(ID)
from student 
group by dept_name)
select dept_name, coount 
from dept_count 
where coount > 2;
27. select dept_name, count(ID)
from student 
group by dept_name
having count(ID)>2;
28.select dept_name, count(Course_id)
from course
group by dept_name;
29.select dept_name, avg(salary)
from instructor
group by dept_name 
having avg(salary) > 42000;
30. Select course_id, title 
from course
where course_id not in (Select distinct course_id from takes);
30. Select course_id title 
from course
minus
select 
31.Select course_id
from section
where semester = 'Fall' and year = '2009' and course_id in (Select course_id
from section
where semester = 'Spring' and year = '2010');
32. select count(distinct ID)
from takes 
where course_ID in (select course_id from teaches where id = 10101);
33.Select course_id
from section
where semester = 'Fall' and year = '2009' and course_id not in (Select course_id
from section
where semester = 'Spring' and year = '2010');
34. select name 
from instructor 
where salary > some(select salary from instructor where dept_name = 'Biology');
35. select name 
from instructor 
where salary > all(select salary from instructor where dept_name = 'Biology');
36. Select course_id
from section T
where semester = 'Fall' and year = 2009 and exists (select course_id from section S where 
semester = 'Spring' and year = 2010 and S.course_id = T.course_id);
37. select S.id, S.name
from student S
where not exists((select course_id from course where dept_name = 'Biology') 
minus
(select t.course_id from takes T where S.id = T.id ));
40. with max_sal(dept_nae, sal) as (select dept_name, sum(salary)
from instructor 
group by dept_name)
select dept_nae, max(sal) as max_tot
from max_sal
group by dept_nae
having max(sal) >= all (select sal
from max_sal);
SAVEPOINT LABEL;
40. select max(tot_salary)
from (select sum(salary) as tot_salary from instructor group by dept_name);
41. select avg_sal
from (select avg(salary) as avg_sal from instructor group by dept_name)
where avg_sal >42000;
47. delete from instructors
where dept_name like 'Finance';
48. delete from course
where dept_name like 'Comp. Sci.';
49.  update student
set dept_name = 'Finance'
where dept_name = 'Comp. Sci.';
ROLLBACK to LABEL
50. update instructor
set salary = salary*1.03
where salary >100000;
update instructor
set salary = salary*1.05
where salary <100000;
52. delete from instructor 
where salary > (select avg(salary) from instructor);
51. insert into student (select ID, name , dept_name , 0 from instructor);